name: Publish to PyPI

on:
  release:
    types: [ published ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Validate tag name
        id: validate
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          # 筛选类似 0.1.1, 0.1.99, 0.99.1, 99.99.99 的版本号
          if [[ $TAG_NAME =~ ^[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}$ ]]; then
            echo "::set-output name=valid::true"
          else
            echo "::set-output name=valid::false"
          fi

      - name: Update Version
        if: steps.validate.outputs.valid == 'true'
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const toml = require('@iarna/toml');
            const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
            try {
                const releaseData = await octokit.rest.repos.getLatestRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                });
                try {
                    const file = fs.readFileSync('./pyproject.toml', 'utf8');
                    let content = toml.parse(file);
                    content['project']['version'] = releaseData.data.tag_name;
                    fs.writeFileSync('./pyproject.toml', toml.stringify(content));
                } catch (err) {
                    console.error('Error reading or updating pyproject.toml:', err);
                    throw err;
                }
            } catch (err) {
                console.error('Error fetching latest release:', err);
                throw err;
            }

      - name: Install Dependencies
        if: steps.validate.outputs.valid == 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          pip install setuptools wheel twine

      - name: Build package
        if: steps.validate.outputs.valid == 'true'
        run: |
          python -m build

      - name: Publish to PyPI
        if: steps.validate.outputs.valid == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
